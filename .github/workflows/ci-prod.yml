name: Pipeline CI/CD - Ambiente PROD

on:
  pull_request:
    branches: [main, master, prod]
  push:
    branches: [main, master, prod]

jobs:
  lint:
    name: Lint nos Projetos Afetados
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Instalar Dependências
        run: |
          if ! npm ci --dry-run; then
            npm install
          else
            npm ci
          fi

      - name: Cache Nx para Lint
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-lint-${{ hashFiles('package-lock.json') }}-${{ hashFiles('nx.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-lint-${{ hashFiles('package-lock.json') }}-
            ${{ runner.os }}-nx-lint-

      - name: Executar Lint
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            npx nx affected --target=lint --base=origin/${{ github.base_ref }} --head=HEAD
          else
            npx nx affected --target=lint --base=HEAD~1 --head=HEAD
          fi

  test:
    name: Testes nos Projetos Afetados
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Instalar Dependências
        run: |
          if ! npm ci --dry-run; then
            npm install
          else
            npm ci
          fi

      - name: Cache Nx para Testes
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-test-${{ hashFiles('package-lock.json') }}-${{ hashFiles('nx.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-test-${{ hashFiles('package-lock.json') }}-
            ${{ runner.os }}-nx-test-

      - name: Executar Testes
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            npx nx affected --target=test --base=origin/${{ github.base_ref }} --head=HEAD --configuration=ci
          else
            npx nx affected --target=test --base=HEAD~1 --head=HEAD --configuration=ci
          fi

  build:
    name: Build dos Projetos Afetados
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: always() && (needs.lint.result == 'success' && needs.test.result == 'success') && github.event_name == 'push'

    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Instalar Dependências
        run: |
          if ! npm ci --dry-run; then
            npm install
          else
            npm ci
          fi

      - name: Cache Nx para Build
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-build-${{ hashFiles('package-lock.json') }}-${{ hashFiles('nx.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-build-${{ hashFiles('package-lock.json') }}-
            ${{ runner.os }}-nx-build-

      - name: Executar Build
        run: npx nx affected --target=build --base=HEAD~1 --head=HEAD

      - name: Resumo do Build
        if: always()
        run: |
          echo "Pipeline PROD concluído com sucesso"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
